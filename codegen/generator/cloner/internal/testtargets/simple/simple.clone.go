// Code generated by github.com/ngicks/go-codegen/codegen DO NOT EDIT.
// to regenerate the code, refer to help by invoking
// go run github.com/ngicks/go-codegen/codegen cloner --help
package simple

import (
	"maps"
	"slices"
)

//codegen:generated
func (v A) Clone() A {
	return A{
		A: v.A,
		B: v.B,
		C: func(v *int) *int {
			out := (*int)(nil)

			inner := out
			if v != nil {
				v := *v
				vv := v
				inner = &vv
			}
			out = inner

			return out
		}(v.C),
	}
}

//codegen:generated
func (v B) Clone() B {
	return B{
		A: func(v []*[]string) []*[]string {
			out := make([]*[]string, len(v))

			inner := out
			for k, v := range v {
				outer := &inner
				inner := (*[]string)(nil)
				if v != nil {
					v := *v
					vv := slices.Clone(v)
					inner = &vv
				}
				(*outer)[k] = inner
			}
			out = inner

			return out
		}(v.A),
		B: maps.Clone(v.B),
		C: func(v []*map[int][3]string) []*map[int][3]string {
			out := make([]*map[int][3]string, len(v))

			inner := out
			for k, v := range v {
				outer := &inner
				inner := (*map[int][3]string)(nil)
				if v != nil {
					v := *v
					outer := &inner
					inner := make(map[int][3]string, len(v))
					for k, v := range v {
						inner[k] = v
					}
					(*outer) = &inner
				}
				(*outer)[k] = inner
			}
			out = inner

			return out
		}(v.C),
	}
}
